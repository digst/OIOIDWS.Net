<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="oioIdwsWcfConfiguration" type="Digst.OioIdws.Wsc.OioWsTrust.Configuration, Digst.OioIdws.Wsc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="oioIdwsLoggingConfiguration" type="Digst.OioIdws.Common.Logging.Configuration, Digst.OioIdws.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
  </configSections>
  <system.diagnostics>
    <sources>
      <source propagateActivity="false" name="System.ServiceModel" logKnownPii="true" switchValue="Verbose">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" logKnownPii="true" switchValue="Verbose">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <!--
    Placed at:
      * "C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\machine.config"
      
      in order to enable logKnownPii the machine.config must also be updated with
    
      <system.serviceModel>
        <machineSettings enableLoggingKnownPii="true"/>
      </system.serviceModel>
    
      logKnownPii makes it possible to see the concrete value which the digest value represent in a SignedInfo reference element.
    -->
      <source name="System.IdentityModel" logKnownPii="true" switchValue="Verbose">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="Digst.OioIdws" switchValue="Information">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>

      <source name="System.Security.Cryptography.Xml.SignedXml" switchName="XmlDsigLogSwitch">
        <listeners>
          <add name="ServiceModelMessageLoggingListener"/>
        </listeners>
      </source>

    </sources>

    <switches>
      <add name="Saml2SecurityTokenHandlerLogSwitch" value="Verbose"/>
      <add name="XmlDsigLogSwitch" value="Verbose"/>
    </switches>

    <trace autoflush="true">
      <listeners>
        <add name="ServiceModelMessageLoggingListener"/>
      </listeners>
    </trace>

    <sharedListeners>
      <add initializeData="C:\temp\Digst.OioIdws.WscLocalSignatureBearerToken.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
    </sharedListeners>
  </system.diagnostics>
  <oioIdwsWcfConfiguration debugMode="true" stsEndpointAddress="https://sts-idws-xua:8181/service/sts" tokenLifeTimeInMinutes="5" wscIdentifier="https://digst.oioidws.wsp:9090/helloworld">
    <clientCertificate findValue="0E6DBCC6EFAAFF72E3F3D824E536381B26DEECF5" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
    <stsCertificate findValue="af7691346492dc30d127d85537297d702993176c" storeLocation="LocalMachine" storeName="Root" x509FindType="FindByThumbprint"/>
  </oioIdwsWcfConfiguration>
  <oioIdwsLoggingConfiguration logger="Digst.OioIdws.WscLocalSignatureBearerToken.Log4NetLogger, Digst.OioIdws.WscLocalSignatureBearerToken"/>
  <startup>
    <supportedRuntime sku=".NETFramework,Version=v4.5.2" version="v4.0"/>
  </startup>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logKnownPii="true" logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"/>
    </diagnostics>
    <behaviors>
      <endpointBehaviors />
    </behaviors>
    <bindings>
      <ws2007FederationHttpBinding>
        <binding name="WS2007FederationHttpBinding_IHelloWorld">
          <security mode="TransportWithMessageCredential">
            <message algorithmSuite="Basic256Sha256" establishSecurityContext="false"
              issuedKeyType="BearerKey" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0">
              <tokenRequestParameters>
                <trust:SecondaryParameters xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">
                  <trust:TokenType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0</trust:TokenType>
                  <trust:KeyType xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer</trust:KeyType>
                  <trust:CanonicalizationAlgorithm xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2001/10/xml-exc-c14n#</trust:CanonicalizationAlgorithm>
                  <trust:EncryptionAlgorithm xmlns:trust="http://docs.oasis-open.org/ws-sx/ws-trust/200512">http://www.w3.org/2001/04/xmlenc#aes256-cbc</trust:EncryptionAlgorithm>
                </trust:SecondaryParameters>
              </tokenRequestParameters>
            </message>
          </security>
        </binding>
      </ws2007FederationHttpBinding>
    </bindings>
    <client>
      <endpoint address="https://digst.oioidws.wsp:9090/helloworld"
        binding="ws2007FederationHttpBinding" bindingConfiguration="WS2007FederationHttpBinding_IHelloWorld"
        contract="HelloWorldProxy.IHelloWorld" name="WS2007FederationHttpBinding_IHelloWorld">
        <identity>
          <dns value="wsp.oioidws-net.dk TEST (funktionscertifikat)" />
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>
  <system.identityModel>
    <identityConfiguration>
      <securityTokenHandlers>
        <remove type="System.IdentityModel.Tokens.Saml2SecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        <add type="Digst.OioIdws.SecurityTokens.Tokens.ExtendedSaml2SecurityToken.ExtendedSaml2SecurityTokenHandler, Digst.OioIdws.SecurityTokens"/>
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>
  <log4net>
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <file value="c:\temp\Digst.OioIdws.WscLocalSignatureBearerToken.log"/>
      <appendToFile value="true"/>
      <maximumFileSize value="100KB"/>
      <maxSizeRollBackups value="2"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level %thread %logger - %message%newline"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="RollingFile"/>
    </root>
  </log4net>
</configuration>
