<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- Minimum needed for logging and STS (BEGIN) -->
  <configSections>
    <section name="oioIdwsWcfConfiguration" type="Digst.OioIdws.Wsc.OioWsTrust.Configuration, Digst.OioIdws.Wsc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="oioIdwsLoggingConfiguration" type="Digst.OioIdws.Common.Logging.Configuration, Digst.OioIdws.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <system.diagnostics>
    <sources>
      <source propagateActivity="false" name="System.ServiceModel" logKnownPii="true" switchValue="Verbose">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" logKnownPii="true" switchValue="Verbose">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.IdentityModel" logKnownPii="true" switchValue="Verbose">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="Digst.OioIdws" switchValue="Information">
        <listeners>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="C:\temp\Digst.OioIdws.DotnetWscJavaWspExampleConfByCode.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
    </sharedListeners>
  </system.diagnostics>
  <!--<oioIdwsWcfConfiguration debugMode="true" stsEndpointAddress="https://SecureTokenService.test-nemlog-in.dk/SecurityTokenService.svc" tokenLifeTimeInMinutes="5" wspEndpointID="https://wsp.oioidws-net.dk">-->
  <oioIdwsWcfConfiguration debugMode="true" stsEndpointAddress="https://SecureTokenService.test-nemlog-in.dk/SecurityTokenService.svc" tokenLifeTimeInMinutes="5" wscIdentifier="https://wsp.itcrew.dk">
    <!--<clientCertificate findValue="0E6DBCC6EFAAFF72E3F3D824E536381B26DEECF5" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>-->
    <clientCertificate findValue="96A26BF6E07DE6DB74E356472CCA4776FEC9B0DA" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
    <stsCertificate findValue="D9F10C97AA647727ADB64A349BB037C5C23C9A7A" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
  </oioIdwsWcfConfiguration>
  <oioIdwsLoggingConfiguration logger="Digst.OioIdws.DotnetWscJavaWspExampleConfByCode.Log4NetLogger, Digst.OioIdws.DotnetWscJavaWspExampleConfByCode"/>
  <log4net>
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <file value="c:\temp\Digst.OioIdws.DotnetWscJavaWspExampleConfByCode.log"/>
      <appendToFile value="true"/>
      <maximumFileSize value="100KB"/>
      <maxSizeRollBackups value="2"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level %thread %logger - %message%newline"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="RollingFile"/>
    </root>
  </log4net>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logKnownPii="true" logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true"/>
    </diagnostics>
    <extensions>
      <bindingExtensions>
        <add name="SoapBinding" type="Digst.OioIdws.Soap.Bindings.SoapBindingCollectionElement, Digst.OioIdws.Soap"/>
      </bindingExtensions>
      <behaviorExtensions>
        <add name="SoapBehavior" type="Digst.OioIdws.Soap.Behaviors.SoapClientBehaviorExtensionElement, Digst.OioIdws.Soap"/>
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="SoapBehaviourConfiguration">
          <clientCredentials>
            <serviceCertificate>
              <scopedCertificates>
                <!-- Certificate of WSP. Used for checking signature on response. targetURI must match the endpoint address. -->
                <add targetUri="{REQUIRED}" findValue="{REQUIRED}" x509FindType="{REQUIRED}" storeLocation="{REQUIRED}" storeName="{REQUIRED}"/>
              </scopedCertificates>
            </serviceCertificate>
          </clientCredentials>
          <!--Endpoints can only point to a single behaviour configuration. Hence, we need to include the SoapBehavior in a existing behavior-->
          <SoapBehavior/>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <SoapBinding>
        <!-- useHttps must be true in production but can be set to false under development -->
        <!-- A default value of 65536 bytes are used if maxReceivedMessageSize is not specified or the empty string is specified. -->
        <binding name="SoapBindingConfiguration" useHttps="true" maxReceivedMessageSize="{OPTIONAL}"/>
      </SoapBinding>
    </bindings>
    <client>
      <endpoint address="{REQUIRED}" binding="SoapBinding" bindingConfiguration="SoapBindingConfiguration" contract="{REQUIRED}" behaviorConfiguration="SoapBehaviourConfiguration">
        <identity>
          <!--Common name specified in certificate that identifies the WSP. Should not be necessary due to WSP cerficate already being configured ... but is required by WIF. -->
          <dns value="{REQUIRED}"/>
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>
  <!-- Minimum needed for logging and STS (END) -->
  <startup>
    <supportedRuntime sku=".NETFramework,Version=v4.5.2" version="v4.0"/>
  </startup>
  <!-- Added by "service-hok\src\main\resources\HelloWorld-Hok.wsdl" -->
  <!--<system.serviceModel>
    <bindings>
      <customBinding>
        <binding name="HelloWorldBinding">
          <textMessageEncoding />
          <httpsTransport />
        </binding>
      </customBinding>
    </bindings>
    <client>
      <endpoint address="https://localhost:8443/HelloWorld/services/helloworld"
        binding="customBinding" bindingConfiguration="HelloWorldBinding"
        contract="HelloWorldProxy.HelloWorldPortType" name="HelloWorldPort" />
    </client>
  </system.serviceModel>-->
</configuration>
